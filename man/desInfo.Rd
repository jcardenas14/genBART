% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/designInfo.R
\name{desInfo}
\alias{desInfo}
\title{Declare design information for downstream analysis}
\usage{
desInfo(y, design, data_type = "micro", columnname = NULL, long = FALSE,
  patient_id = NULL, baseline_var = NULL, baseline_val = NULL,
  control_var = NULL, control_val = NULL, time_var = NULL,
  responder_var = NULL, summary_var = NULL, sample_id = NULL,
  project_name = NULL)
}
\arguments{
\item{y}{An expression matrix or dataframe}

\item{design}{A design matrix or dataframe containing sample information
(e.g. age, condition, timepoint, etc.)}

\item{data_type}{What type of data is being analyzed? ("micro", "rna",
"flow", "metab"). Default is data_type="micro"}

\item{columnname}{Name of column in design that contains the column names of
y}

\item{long}{logical; Is the study longitudinal?}

\item{patient_id}{Name of column in design that contains patient ids}

\item{baseline_var}{Name of column in design that contains values referring
to baseline observations}

\item{baseline_val}{string or numeric value denoting baseline observations}

\item{control_var}{Name of column in design that contains values referring to
controls}

\item{control_val}{string or numeric value denoting controls}

\item{time_var}{For longitudinal studies. Name of column in design that
contains the study timepoints}

\item{responder_var}{Name of column in design that contains subject responder
status or condition}

\item{summary_var}{Column name in design denoting a numeric variable over
which sample design summary tables are initialized (e.g. Age)}

\item{sample_id}{Name of column in design that contains unique sample
identification}

\item{project_name}{String denoting the name of the project or study}
}
\value{
A list containing matched design and expression and all of the design
  parameters specified
}
\description{
Match design and expression matrices. Declare and store design parameters.
}
\examples{
# Using example dataset in genBART package
data(tb.expr)
data(tb.design)
des.info <- desInfo(y = tb.expr, design = tb.design, data_type = "micro", columnname = "columnname", long = TRUE, patient_id = "monkey_id",
                    baseline_var = "mytimepoint", baseline_val = 0, time_var = "mytimepoint", responder_var = "clinical_status",
                    summary_var = "numbChip", sample_id = "sample_group", project_name = "Jason_TB")
}
