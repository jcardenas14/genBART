% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genModelResults.R
\name{genModelResults}
\alias{genModelResults}
\title{Generate formatted results file}
\usage{
genModelResults(y, data.type, object, lm.Fit, method = "limma",
  comp.names = NULL, var.names = NULL, var.symbols = NULL,
  gene.sets = NULL, annotations = NULL)
}
\arguments{
\item{y}{data frame the model was run on.}

\item{data.type}{type of data being analyzed ("microarray", "rnaseq", 
"flow", "metab"). Default is data.type="microarray".}

\item{object}{result object generated from \code{limma}, \code{DESeq2}, or 
\code{edgeR}.}

\item{lm.Fit}{linear model fit object generated from \code{limma}, 
\code{DESeq2}, or \code{edgeR}}

\item{method}{Which method is being used? ("limma","deseq2","edgeR")}

\item{comp.names}{comp.names=NULL is the default. A vector of comparison 
(contrast) names}

\item{var.names}{var.names=NULL is the default. Optional vector of variable 
names. Otherwise, the rownames of the expression data frame or matrix are 
used.}

\item{var.symbols}{var.symbols=NULL is the default. Optional vector of 
annotations for the variables. Otherwise, the rownames of the 
expression dataframe are used.}

\item{gene.sets}{A list of gene sets.}

\item{annotations}{A data frame of additional annotations for the gene sets.}
}
\value{
\code{data.type} string denoting the type of data that was analyzed

\code{results} the formatted results returned as a data frame

\code{resids} data frame of residuals. Returned only if 
  data.type="microarray" or "rnaseq" and method="limma". Used to estimate VIFs 
  when running the QUSAGE algorithim in \code{\link{qBart}}.

\code{gene.sets} list of gene sets provided by the user. NULL if no 
  list provided.

\code{annotations} data frame of gene set annotations provided by the
  user. Null if no annotations are provided.
}
\description{
Generate formatted results file from completed differential analysis in 
limma, DESeq2, or edgeR
}
\details{
This function formats the results obtained from running differential
  analysis in either one of \code{limma}, \code{DESeq2}, or \code{edgeR}. The
  parameter \code{object} accepts as input a results object from functions 
  \code{\link[limma]{eBayes}} (limma), \code{\link[DESeq2]{results}} 
  (DESeq2), \code{\link[edgeR]{glmLRT}} or \code{\link[edgeR]{glmQLFTest}} 
  (edgeR). The parameter \code{lm.Fit} accepts a fitted model object from 
  functions \code{\link[limma]{lmFit}} (limma), \code{\link[DESeq2]{DESeq}} 
  (DESeq2), \code{\link[edgeR]{glmFit}} or \code{\link[edgeR]{glmQLFit}} 
  (edgeR).
}
\examples{
# Example data
data(tb.expr)
data(tb.design)

# Only use first 100 genes to demonstrate
dat <- tb.expr[1:100,]

# Generate lmFit and eBayes (limma) objects needed for genModelResults
tb.design$Group <- paste(tb.design$clinical_status,tb.design$timepoint,sep = "")
grp <- factor(tb.design$Group)
design2 <- model.matrix(~0+grp)
colnames(design2) <- levels(grp)

dupcor <- limma::duplicateCorrelation(dat, design2, block = tb.design$monkey_id)
fit <- limma::lmFit(dat, design2, block = tb.design$monkey_id, 
             correlation = dupcor$consensus.correlation)
contrasts <- limma::makeContrasts(A_20vsPre = Active20-Active0, A_42vsPre = Active42-Active0, 
                                  levels=design2)
fit2 <- limma::contrasts.fit(fit, contrasts)
fit2 <- limma::eBayes(fit2, trend = FALSE)

# Format results
model.results <- genModelResults(y = dat, data.type = "microarray", object = fit2,
                                 lm.Fit = fit, method = "limma")
}
